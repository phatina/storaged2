<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">

  <!--
 Copyright (C) 2015 Dominika Hodovska <dhodovsk@redhat.com>

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General
 Public License along with this library; if not, write to the
 Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 Boston, MA 02111-1307, USA.
-->

   <!-- ********************************************************************** -->

  <!--
       org.storaged.Storaged.Manager.bcache:
       @short_description: Bcache add-on to the manager singleton
       @since: 2.4.0

       Additional interface with Bcache specifics for top-level manager
       singleton object located at the object path
       <literal>/org/storaged/Storaged/Manager</literal>.
  -->
  <interface name = "org.storaged.Storaged.Manager.Bcache">
    <!-- prereq: org.storaged.Storaged.Manager -->

     <!--
        BcacheCreate:
        @backing_dev: backing (slow) device of the cache
        @cache_dev: cache (fast) device of the cache
        @options: Additional options.
        @bcache: name of the new bcache device
        @since: 2.4.0

        Create new bcache device.

        No additional options are currently defined.
    -->
    <method name = "BcacheCreate">
      <arg name="backing_dev" direction="in" type="s"/>
      <arg name="cache_dev" direction="in" type="s"/>
      <arg name="options" direction="in" type="a{sv}"/>
      <arg name="bcache" direction="out" type="s"/>
    </method>

  </interface>

  <interface name = "org.storaged.Storaged.Block.Bcache">
    <!-- prereq: org.storaged.Storaged.Block -->

    <!--
        BcacheDestroy:
        @options: Additional options.
        @since: 2.4.0

        Destroy bcache devices.

        No additional options are currently defined.
    -->
    <method name = "BcacheDestroy">
      <arg name="options" direction="in" type="a{sv}"/>
    </method>

    <!--
        SetMode:
        @mode: mode to set
        @options: Additional options.
        @since: 2.4.0

        Change cache mode.

        No additional options are currently defined.
    -->
    <method name = "SetMode">
      <arg name="mode" direction="in" type="s"/>
      <arg name="options" direction="in" type="a{sv}"/>
    </method>

    <property name="mode" type="s" access="read"/>
    <property name="state" type="s" access="read"/>
    <property name="block_size" type="t" access="read"/>
    <property name="cache_size" type="t" access="read"/>
    <property name="cache_used" type="t" access="read"/>
    <property name="hits" type="t" access="read"/>
    <property name="misses" type="t" access="read"/>
    <property name="bypass_hits" type="t" access="read"/>
    <property name="bypass_misses" type="t" access="read"/>

  </interface>
